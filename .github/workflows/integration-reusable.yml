name: "pvt: run integration tests"

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      name:
        required: true
        type: string

run-name: reusable run-name ${{ github.ref }}
# TODO: check run-name
jobs:
  run-integration-tests:
    # TODO: check name
    name: reusable job-name ${{ github.ref }}
    defaults:
      run:
        shell: bash
    runs-on: ${{ inputs.os }} 
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - run: echo PAYLOAD ${{ inputs.os }}
    - run: echo github context ${{ toJson(github) }}
    - run: echo env context ${{ toJson(env) }}
    - run: echo vars context ${{ toJson(vars) }}
    - run: echo job context ${{ toJson(job) }}
    - run: echo jobs context ${{ toJson(jobs) }}
    - run: echo steps context ${{ toJson(steps) }}
    - run: echo runner context ${{ toJson(runner) }}
    - run: echo secrets context ${{ toJson(secrets) }}
    - run: echo strategy context ${{ toJson(strategy) }}
    - run: echo matrix context ${{ toJson(matrix) }}
    - run: echo needs context ${{ toJson(needs) }}
    - run: echo inputs context ${{ toJson(inputs) }}

    - uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.workflow_run.pull_requests[0].number }},
              owner: "${{ github.repository_owner }}",
              repo: "${{github.event.workflow_run.repository.name }}",
              body: "started asdf ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            })
    - name: Checkout cli
      uses: actions/checkout@v3
      with:
        ref: ${{github.event.workflow_run.head_sha}}
    - id: test-secret
      name: test secret
      env:
        test_secret: ${{ secrets.TEST_SECRET }}
        test_var: ${{ vars.TEST_VAR }}
      run: |
        if [ test_secret1 == $test_secret ]; then
          echo "I SEE SECERET"
        fi
        echo  $test_var
        cat testfile
    - uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.workflow_run.pull_requests[0].number }},
              owner: "${{ github.repository_owner }}",
              repo: "${{github.event.workflow_run.repository.name }}",
              body: "finished asdf ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            })